image:
  - Ubuntu1804
  - Visual Studio 2017

platform: x64

configuration: Release

clone_depth: 1

skip_tags: true

for:
-
  matrix:
    only:
      - image: Ubuntu1804

  services:
    - mssql
    - mysql

  install:
    - sh: sudo add-apt-repository ppa:beineri/opt-qt-5.12.0-bionic
    - sh: sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable
    - sh: sudo apt-get update
    - sh: sudo apt-get -y install git
    - sh: sudo apt-get -y install libboost-dev
    - sh: sudo apt-get -y install libgdal-dev
    - sh: sudo apt-get -y install libproj-dev
    - sh: sudo apt-get -y install qt512-meta-minimal
    - sh: sudo apt-get -y install qt512imageformats
    - ps: Invoke-WebRequest -Uri https://raw.githubusercontent.com/catchorg/Catch2/v2.0.1/single_include/catch.hpp -OutFile $env:APPVEYOR_BUILD_FOLDER\..\catch.hpp

  test_script:
    - sh: cd $APPVEYOR_BUILD_FOLDER/test
    - sh: make -f ./makefile.ubuntu test CXX=g++ CXXFLAGS+=-DBARK_TEST_MSSQL_SERVER=localhost CXXFLAGS+=-DBARK_TEST_MYSQL_SERVER=localhost CXXFLAGS+=-DBARK_TEST_DATABASE_PWD=Password12!

  build_script:
    - sh: cd $APPVEYOR_BUILD_FOLDER/example/nanogis

-
  matrix:
    only:
      - image: Visual Studio 2017

  services:
    - mssql2017
    - mysql
    - postgresql101

  environment:
    NANOGIS_ARCHIVE: nanogis.windows.zip
    NANOGIS_ROOT: C:\nanogis
    OSGEO4W_ROOT: C:\OSGeo4W64

  install:
    - mkdir %OSGEO4W_ROOT%
    - call %OSGEO4W_ROOT%\osgeo4w-setup-x86_64.exe -q -k -r -A -s http://download.osgeo.org/osgeo4w/ -a x86_64 -P curl,gdal,libmysql,libmysql-devel,libpq,proj,spatialite,sqlite3 -R %OSGEO4W_ROOT% > NUL
    - del /Q /F %OSGEO4W_ROOT%\bin\boost*.dll %OSGEO4W_ROOT%\bin\mod_spatialite.dll
    - ps: Invoke-WebRequest -Uri https://raw.githubusercontent.com/catchorg/Catch2/v2.0.1/single_include/catch.hpp -OutFile $env:OSGEO4W_ROOT\include\catch.hpp
    - call %OSGEO4W_ROOT%\bin\o4w_env.bat
    - call C:\Qt\5.12\msvc2017_64\bin\qtenv2.bat
    - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
    - 'set INCLUDE=%OSGEO4W_ROOT%\include;%OSGEO4W_ROOT%\include\libpq;%OSGEO4W_ROOT%\include\mysql;C:\Libraries\boost_1_69_0;%INCLUDE%'
    - 'set LIB=%OSGEO4W_ROOT%\lib;%LIB%'
    - curl -L -O -S -s http://download.osgeo.org/postgis/windows/pg10/archive/postgis-bundle-pg10-2.5.0x64.zip
    - call "C:\Program Files\7-Zip\7z.exe" x postgis-bundle-pg10-2.5.0x64.zip > nul
    - xcopy /s /y /q postgis-bundle-pg10-2.5.0x64 "C:\Program Files\PostgreSQL\10"
    - SET PGUSER=postgres
    - SET PGPASSWORD=Password12!
    - SET PATH=C:\Program Files\PostgreSQL\10\bin\;%PATH%

  before_test:
    - psql -d postgres -U postgres -c "CREATE EXTENSION postgis;"

  test_script:
    - cd %APPVEYOR_BUILD_FOLDER%/test
    - SET CXXFLAGS=/DBARK_TEST_MSSQL_SERVER=(local)\\SQL2017 /DBARK_TEST_MYSQL_SERVER=localhost /DBARK_TEST_POSTGRES_SERVER=localhost /DBARK_TEST_DATABASE_PWD=Password12!&& nmake -f ./makefile.windows test

  build_script:
    - cd %APPVEYOR_BUILD_FOLDER%/example/nanogis
    - qmake
    - nmake

  after_build:
    - mkdir %NANOGIS_ROOT%
    - copy %APPVEYOR_BUILD_FOLDER%\example\nanogis\release\nanogis.exe %NANOGIS_ROOT%
    - windeployqt --no-quick-import --no-translations --no-system-d3d-compiler --no-webkit2 --no-opengl-sw %NANOGIS_ROOT%\nanogis.exe > NUL
    - copy %OSGEO4W_ROOT%\bin\*.dll %NANOGIS_ROOT% > NUL
    - call "C:\Program Files\7-Zip\7z.exe" a %APPVEYOR_BUILD_FOLDER%\example\%NANOGIS_ARCHIVE% %NANOGIS_ROOT%

  artifacts:
    - path: example\%NANOGIS_ARCHIVE%
      name: $(NANOGIS_ARCHIVE)

  deploy:
    provider: GitHub
    auth_token:
      secure: eK6200vsXUmBfsFy8CVFVCsgBL+WDOP2j2HHHdbcEo5ToHFBljTDUWDNgFq0U5xw
    artifact: $(NANOGIS_ARCHIVE)
