image:
  - Visual Studio 2017
  - Ubuntu1804

platform: x64

configuration: Release

clone_depth: 1

skip_tags: true

services:
  - mssql2017
  - mysql
  - postgresql101

environment:
  APPVEYOR_YML_DISABLE_PS_LINUX: true
  NANOGIS_ARCHIVE: nanogis.windows.zip
  NANOGIS_ROOT: C:\nanogis
  OSGEO4W_ROOT: C:\OSGeo4W64

install:
  - cmd: mkdir %OSGEO4W_ROOT%
  - ps: Invoke-WebRequest -Uri http://download.osgeo.org/osgeo4w/osgeo4w-setup-x86_64.exe -OutFile $env:OSGEO4W_ROOT\osgeo4w-setup-x86_64.exe
  - cmd: call %OSGEO4W_ROOT%\osgeo4w-setup-x86_64.exe -q -k -r -A -s http://download.osgeo.org/osgeo4w/ -a x86_64 -P curl,gdal,libmysql,libmysql-devel,libpq,proj,spatialite,sqlite3 -R %OSGEO4W_ROOT% > NUL
  - cmd: del /Q /F %OSGEO4W_ROOT%\bin\boost*.dll %OSGEO4W_ROOT%\bin\mod_spatialite.dll
  - ps: Invoke-WebRequest -Uri https://raw.githubusercontent.com/catchorg/Catch2/v2.0.1/single_include/catch.hpp -OutFile $env:OSGEO4W_ROOT\include\catch.hpp
  - cmd: call %OSGEO4W_ROOT%\bin\o4w_env.bat
  - cmd: call C:\Qt\5.12\msvc2017_64\bin\qtenv2.bat
  - cmd: call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  - cmd: 'set INCLUDE=%OSGEO4W_ROOT%\include;%OSGEO4W_ROOT%\include\libpq;%OSGEO4W_ROOT%\include\mysql;C:\Libraries\boost_1_69_0;%INCLUDE%'
  - cmd: 'set LIB=%OSGEO4W_ROOT%\lib;%LIB%'
  - cmd: curl -L -O -S -s http://download.osgeo.org/postgis/windows/pg10/archive/postgis-bundle-pg10-2.5.0x64.zip
  - cmd: call "C:\Program Files\7-Zip\7z.exe" x postgis-bundle-pg10-2.5.0x64.zip > nul
  - cmd: xcopy /s /y /q postgis-bundle-pg10-2.5.0x64 "C:\Program Files\PostgreSQL\10"
  - cmd: SET PGUSER=postgres
  - cmd: SET PGPASSWORD=Password12!
  - cmd: SET PATH=C:\Program Files\PostgreSQL\10\bin\;%PATH%
  - sh: sudo add-apt-repository ppa:beineri/opt-qt-5.12.0-bionic
  - sh: sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable
  - sh: sudo apt-get update
  - sh: sudo apt-get install git
  - sh: sudo apt-get install libboost-dev
  - sh: sudo apt-get install libgdal-dev
  - sh: sudo apt-get install libproj-dev
  - sh: sudo apt-get install qt512-meta-minimal
  - sh: sudo apt-get install qt512imageformats

before_test:
  - cmd: psql -d postgres -U postgres -c "CREATE EXTENSION postgis;"

test_script:
  - cmd: cd %APPVEYOR_BUILD_FOLDER%/test
  - cmd: SET CXXFLAGS=/DBARK_TEST_MSSQL_SERVER=(local)\\SQL2017 /DBARK_TEST_MYSQL_SERVER=localhost /DBARK_TEST_POSTGRES_SERVER=localhost /DBARK_TEST_DATABASE_PWD=Password12!&& nmake -f ./makefile.windows test
  - sh: cd $APPVEYOR_BUILD_FOLDER/test
  - sh: make -f ./makefile.ubuntu test CXX=g++ CXXFLAGS+=-DBARK_TEST_MSSQL_SERVER=(local)\\SQL2017 CXXFLAGS+=-DBARK_TEST_MYSQL_SERVER=localhost CXXFLAGS+=-DBARK_TEST_DATABASE_PWD=Password12!

build_script:
  - cmd: cd %APPVEYOR_BUILD_FOLDER%/example/nanogis
  - cmd: qmake
  - cmd: nmake

after_build:
  - cmd: mkdir %NANOGIS_ROOT%
  - cmd: copy %APPVEYOR_BUILD_FOLDER%\example\nanogis\release\nanogis.exe %NANOGIS_ROOT%
  - cmd: windeployqt --no-quick-import --no-translations --no-system-d3d-compiler --no-webkit2 --no-opengl-sw %NANOGIS_ROOT%\nanogis.exe > NUL
  - cmd: copy %OSGEO4W_ROOT%\bin\*.dll %NANOGIS_ROOT% > NUL
  - cmd: call "C:\Program Files\7-Zip\7z.exe" a %APPVEYOR_BUILD_FOLDER%\example\%NANOGIS_ARCHIVE% %NANOGIS_ROOT%

artifacts:
  - path: example\%NANOGIS_ARCHIVE%
    name: $(NANOGIS_ARCHIVE)

deploy:
  provider: GitHub
  auth_token:
    secure: eK6200vsXUmBfsFy8CVFVCsgBL+WDOP2j2HHHdbcEo5ToHFBljTDUWDNgFq0U5xw
  artifact: $(NANOGIS_ARCHIVE)
